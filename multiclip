#!/usr/bin/python
import optparse


KEYS_PATH = '/dev/multiclip/board'

key_dict = {
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6,
    '6': 7,
    '7': 8,
    '8': 9,
    '9': 10,
    '0': 11,
    'Q': 16,
    'W': 17,
    'E': 18,
    'R': 19,
    'T': 20,
    'Y': 21,
    'U': 22,
    'I': 23,
    'O': 24,
    'P': 25,
    'A': 30,
    'S': 31,
    'D': 32,
    'F': 33,
    'G': 34,
    'H': 35,
    'J': 36,
    'K': 37,
    'L': 38,
    'Z': 44,
    'X': 45,
    'C': 46,
    'V': 47,
    'B': 48,
    'N': 49,
    'M': 50,
}


def get_scan_code_dict():
    scan_code_dict = {}
    for ( key, scan_code ) in key_dict.iteritems():
        scan_code_dict[scan_code] = key
    return scan_code_dict


def parse_args():
    parser = optparse.OptionParser()
    parser.add_option('-k', '--key',
                      dest='key',
                      type='string',
                      action='store',
                      metavar='KEY',
                      help='get value of a spesific key'
    )
    parser.add_option('-a', '--all',
                      dest='all',
                      action='store_true',
                      help='get value of all keys'
    )
    return parser.parse_args()


def get(scan_code):
    return repr( open(KEYS_PATH + str(scan_code), 'r').read() )


def get_all():
    '''
    get value of all keys
    :return: scan codes and values as list of tuples
    '''
    result = []
    for scan_code in key_dict.values():
        value = get(scan_code)
        if value != "''":
            result.append((scan_code, value))
    return result


def main():
    options, remainder = parse_args()

    if options.all:
        all_list = get_all()
        scan_code_dict = get_scan_code_dict()
        for (scan_code, value) in all_list:
            print scan_code_dict[scan_code] + ' : ' + value
    elif options.key:
        if not ( len(options.key)==1 and ('A' <= options.key <= 'Z' or '0' <= options.key <= '9')) :
            print 'You can only enter 0-9 or A-Z'
        else:
            print get(key_dict[options.key])


if __name__ == "__main__":
    main()
